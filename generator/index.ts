// this file can help you generate data for your project based on your data sets.
// this will be a working file that will transform to allow the generation of datasets as required.

const { PromptTemplate } = require("langchain/prompts");
const { OpenAI } = require("langchain/llms/openai");
const { LLMChain } = require("langchain/chains");
const { BufferMemory } = require("langchain/memory");

const memory = new BufferMemory({ inputKey: "input" });

const model = new OpenAI({
  openAIApiKey: "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",
  temperature: 0.6,
});

const SOLAR_EXPERT_ROLE = `
You are an expert solar installer, applying your knowledge of solar energy to help people make informed decisions about solar energy.
You know everything about solar energy, including how it works, how much it costs, and how to install it.
You know everything about the legislation, incentives, and rebates available in your {city} and {state}.
`;

const SEO_EXPERT_ROLE = `
You are an expert content creator applying Google's guidelines for creating content.
Your task is to assess and improve content by ensuring it's original, comprehensive, and well-produced, with clear expertise on the topic.
The content should provide a great user experience, be primarily created for people, not search engines, and should not leave readers seeking better information elsewhere.
Your ultimate goal is to create helpful and reliable content for users, rather than aiming solely for high search engine rankings.
`;

const solarInCityState = new LLMChain({
  llm: model,
  prompt: new PromptTemplate({
    template: `
    Role:

    ${SEO_EXPERT_ROLE}

    Specialization:

    ${SOLAR_EXPERT_ROLE}

    Context:

    As a Solar Expert and Content Creator, I need your help putting together a list of benefits of solar energy for {city}, {state}.

    Some benefits to explore that might be worth mentioning for them are the following list:

    1. Solar Irradiance: The amount of sunlight that a {city}, {state} receives is a significant factor. Locations closer to the equator, with fewer overcast days and more daylight hours, can generate more solar power. What is the solar irradiance in {city}, {state}?
    2. Climate: Regions with longer, sunnier summers and shorter, milder winters typically provide a more favorable environment for solar energy production. What is the regional effect in {city}, {state}?
    3. Altitude: Higher-altitude areas often have less atmospheric interference and, consequently, more intense sunlight. This can lead to increased solar power generation. What is the altitude in {city}, {state}?
    4. Local Energy Prices: If the cost of grid electricity is high in a certain area, then the savings from solar power will be more substantial. This factor greatly affects the return on investment for solar panels. What is the cost of grid electricity in {city} or {state}?
    5. State and Local Policies: Policies and incentives that promote renewable energy use, such as tax incentives, grants, and rebate programs, can significantly reduce the cost of installing and maintaining a solar power system. What are the state and local policies for {city}, {state}?
    6. Net Metering Policies: Some energy companies in cities or states allow the selling of excess electricity generated by solar power back to the grid, which can improve the financial returns of solar power systems. What are the net metering policies in {city} or {state}?
    7. Local Energy Demand: High local energy demand, especially during peak sunlight hours, can make solar power a more attractive option due to the potential for selling back excess energy to the grid. What is the local energy demand in {city} or {state}?
    8. Grid Stability: In areas where grid electricity supply is unstable or unreliable, solar panels can provide a more stable and dependable source of power. What is the grid stability in {city} or {state}?
    9. Environmental Regulations: Strong local environmental regulations or renewable energy targets can create additional benefits or incentives for installing solar panels. What are the environmental regulations in {city} or {state}?

    Task:

    Please respond with a 9 paragraphs returned as an array of strings. Each string should be a paragraph.

    like this:
    +++
    [
      "This is an example paragraph, aim for 2-4 sentences",
      "this is a second paragraph, again aim for quality content",
      "this is a third paragraph, make sure you're explaining things very simply but thoroughly.",
    ]
    +++

    Please make sure that you add the +++ and +++ on both sides of the expected INSERT_DELIVERABLE_HERE. Thank you!
    `.trim(),
    inputVariables: ["city", "state"],
  }),
  memory,
});

const cities = require("../src/data/sets/cities.json");

function extractTextBetweenDelimiters(input) {
  const delimiter = "\\+{3}"; // The delimiter is "+++"
  const regex = new RegExp(`${delimiter}\\s*([\\s\\S]*?)\\s*${delimiter}`);
  const match = input.match(regex);
  return match ? match[1] : null;
}

const executeChain = async (name, chain, params) =>
  new Promise(async (resolve, reject) => {
    try {
      const result = await chain.call(params);
      const extraction = extractTextBetweenDelimiters(result.text);
      console.log(`"🤖 AI Extraction | ${name} | `, extraction);
      resolve(extraction);
    } catch (error) {
      const message = `Failed to generate a suitable ${name}.`;
      console.log(`❌ ${message}`, error);
      reject(message);
    }
  });

async function enrichCitiesWithParagraphs(cities, chain) {
  for (let city of cities) {
    try {
      const paragraphs = await executeChain(`${city.city}, ${city.state}`, chain, city);
      city.paragraphs = paragraphs;
    } catch (error) {
      console.error(`Failed to enrich ${city.city}, ${city.state}: `, error);
    }
  }
}

enrichCitiesWithParagraphs(cities, solarInCityState).then(() => {
  // Save the enriched cities data to a file
  const fs = require("fs");
  fs.writeFile("../src/data/sets/enriched_cities.json", JSON.stringify(cities, null, 2), (err) => {
    if (err) {
      console.error("Error writing file:", err);
    } else {
      console.log("File has been written");
    }
  });
});
